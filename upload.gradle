
//需要的两个插件
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'


//上传的组名称,工程名称和版本,通过以上三个来定位某个具体的依赖包
/**
 * 使用方法
 * 1.使用默认值
 * 2.引入上传gradle文件
 *
 * rootProject.ext.uploadPackageName="com.mx.common"
 * rootProject.ext.libraryVersion="1.0.1"
 * apply from: rootProject.getRootDir().getAbsolutePath() + "/upload.gradle"
 */
def packageName = 'com.mx.default'
def libraryVersion = '1.0.1'

packageName = rootProject.ext.uploadPackageName
libraryVersion = rootProject.ext.libraryVersion

println "upload package name is "+packageName + ",version is "+libraryVersion

publishing {
    publications {
        aar(MavenPublication) {
            groupId packageName
            version = libraryVersion
            artifactId project.getName()

            // Tell maven to prepare the generated "* .aar" file for publishing
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
        }
    }
}


artifactory {
    contextUrl = 'http://10.0.5.171:8081/artifactory'
    publish {
        repository {
            // The Artifactory repository key to publish to
            //仓库名称,可以自己在服务器添加
            repoKey = 'maxthon-libs'

            username = "admin"
            password = "password"
        }
        defaults {
            // Tell the Artifactory Plugin which artifacts should be published to Artifactory.
            publications('aar')
            publishArtifacts = true

            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team': 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}

